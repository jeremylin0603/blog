import{_ as p,M as c,p as a,q as n,Q as o,t as e,N as d,V as l,a1 as r}from"./framework-cd43f88a.js";const s={},i=r('<h1 id="單線程與同步執行" tabindex="-1"><a class="header-anchor" href="#單線程與同步執行" aria-hidden="true">#</a> 單線程與同步執行</h1><p>JS 是單線程並且同步執行的，老實說這兩個名詞曾經困擾我很久，希望現在能藉由自己的理解來解放與我當初有同樣困擾的同學。</p><p>大家應該就學時期都有寫過回家作業吧？尤其是接近期中期末考，天Ｘ的每個科目都有作業要做，國英數自社會瘋狂壓榨著每個小朋友的心理健康...</p><p>面對這些作業，我們可以有幾種處理方式 -</p><p><s>1. 擺爛</s></p><ol><li><p>按部就班，國文作業寫完再寫英文，一門一門科目消化，個別擊破</p></li><li><p>轉換心情，國文寫一寫手酸了去算數學，數學算一算累了去背英文，每個科目都跳來跳去這邊消化一點，那邊消化一點，直到最後寫完作業</p></li><li><p>爸媽我不想努力，找媽媽或爸爸一起來寫作業，大家同心協力才能早點上床睡覺！</p></li></ol><p>這幾個方法中：</p><p>[<code>1.</code>] 按部就班，一門一門科目消化，就是<code>同步</code>，把作業照著固定的順序做下去。</p><p>[<code>2.</code>] 轉換心情，這邊做一點那邊做一點，就是<code>非同步</code>，消化作業之間沒有一定的順序節奏。</p><p>[<code>1. &amp; 2.</code>] 不管在這之間選擇哪種，你終究只能同時處理一項作業，這就是單執行緒</p><p>[<code>3.</code>] 不想努力，找爸媽一起寫，就能同時處理多項作業，這就是多執行緒</p><p>所以我們說 JS 是一門同步、單執行緒的語言，就是表示 JS 做事會有一個固定的順序(同步)，而且他只有一個人，所以一次只能處理一件事(單執行緒)。</p>',12);function _(h,m){const t=c("RouterLink");return a(),n("div",null,[i,o("blockquote",null,[o("p",null,[e("同步執行的過程中，若有異步操作(Promise)，或使用了 JS Engine 之外的 API(runtime 提供)，則 event loop 會介入執行流程，"),o("s",null,[e("詳情請見 "),d(t,{to:"/code-memo/js-we-dont-know/event-loop.html"},{default:l(()=>[e("event loop")]),_:1})]),e(" 敬請期待^^。")])])])}const f=p(s,[["render",_],["__file","thread.html.vue"]]);export{f as default};
